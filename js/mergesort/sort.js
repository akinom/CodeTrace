
MergeSort = []; 

MergeSort.name = "MergeSort";


MergeSort.code = ["def mergesort(lst, i, n):",
"   if (n <= 1):",
"      return",
"   halflen = int( n / 2 )",
"   mergesort(lst, i,  halflen)",
"   mergesort(lst, i + halflen, n - halflen)",
"   merge(lst, i, i + halflen, n)",
"   return"];


var nSort = 0; 
var R7 = nSort; 
MergeSort[R7] = { name: "7 Numbers", nLst : 7, maxVal : 15.5 }; 
MergeSort[R7].lst = [8, 4, 3, 15, 6, 12, 1];

nSort++; 
var R25 = nSort;
MergeSort[R25] = { name: "25 Numbers", nLst : 25, maxVal : 100 };
MergeSort[R25].lst = [15, 80, 7, 1, 55, 25, 23, 72, 9, 98, 47, 70, 12, 100, 91, 72, 96, 45, 20, 36, 70, 94, 37, 25, 53]

nSort++; 
var R50 = nSort;
MergeSort[R50] = { name: "50 Numbers", nLst : 50, maxVal : 100 };
MergeSort[R50].lst = [51, 66, 69, 33, 8, 95, 1, 96, 100, 22, 29, 4, 72, 21, 100, 71, 19, 55, 70, 86, 10, 91, 74, 28, 12, 57, 36, 95, 48, 63, 23, 53, 78, 94, 100, 52, 41, 92, 86, 64, 91, 90, 16, 85, 6, 70, 38, 72, 78, 75];

MergeSort[R7].steps = [
{ action: 'curline', line: 0, text:'mergesort(lst, i=0, n=7)' },
{ action: 'setRange', i:0, n:7 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 7 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 3'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 0, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=0, n=3)' },
{ action: 'setRange', i:0, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 0, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=0, n=1)' },
{ action: 'setRange', i:0, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:0, n:1, array: [8] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 1, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=1, n=2)' },
{ action: 'setRange', i:1, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 1, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=1, n=1)' },
{ action: 'setRange', i:1, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:1, n:1, array: [4] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 2, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=2, n=1)' },
{ action: 'setRange', i:2, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:2, n:1, array: [3] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=1, middle=2, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:1, n:2, array: [3, 4] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=0, middle=1, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:0, n:3, array: [3, 4, 8] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 3, 4)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=3, n=4)' },
{ action: 'setRange', i:3, n:4 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 4 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 2'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 3, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=3, n=2)' },
{ action: 'setRange', i:3, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 3, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=3, n=1)' },
{ action: 'setRange', i:3, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:3, n:1, array: [15] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 4, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=4, n=1)' },
{ action: 'setRange', i:4, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:4, n:1, array: [6] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=3, middle=4, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:3, n:2, array: [6, 15] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 5, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=5, n=2)' },
{ action: 'setRange', i:5, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 5, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=5, n=1)' },
{ action: 'setRange', i:5, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:5, n:1, array: [12] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 6, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=6, n=1)' },
{ action: 'setRange', i:6, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:6, n:1, array: [1] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=5, middle=6, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:5, n:2, array: [1, 12] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=3, middle=5, len=4)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:3, n:4, array: [1, 6, 12, 15] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=0, middle=3, len=7)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:0, n:7, array: [1, 3, 4, 6, 8, 12, 15] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' }
];

MergeSort[R25].steps = [
{ action: 'curline', line: 0, text:'mergesort(lst, i=0, n=25)' },
{ action: 'setRange', i:0, n:25 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 25 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 12'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 0, 12)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=0, n=12)' },
{ action: 'setRange', i:0, n:12 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 12 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 6'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 0, 6)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=0, n=6)' },
{ action: 'setRange', i:0, n:6 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 6 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 3'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 0, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=0, n=3)' },
{ action: 'setRange', i:0, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 0, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=0, n=1)' },
{ action: 'setRange', i:0, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:0, n:1, array: [15] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 1, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=1, n=2)' },
{ action: 'setRange', i:1, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 1, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=1, n=1)' },
{ action: 'setRange', i:1, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:1, n:1, array: [80] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 2, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=2, n=1)' },
{ action: 'setRange', i:2, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:2, n:1, array: [7] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=1, middle=2, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:1, n:2, array: [7, 80] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=0, middle=1, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:0, n:3, array: [7, 15, 80] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 3, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=3, n=3)' },
{ action: 'setRange', i:3, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 3, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=3, n=1)' },
{ action: 'setRange', i:3, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:3, n:1, array: [1] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 4, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=4, n=2)' },
{ action: 'setRange', i:4, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 4, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=4, n=1)' },
{ action: 'setRange', i:4, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:4, n:1, array: [55] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 5, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=5, n=1)' },
{ action: 'setRange', i:5, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:5, n:1, array: [25] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=4, middle=5, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:4, n:2, array: [25, 55] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=3, middle=4, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:3, n:3, array: [1, 25, 55] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=0, middle=3, len=6)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:0, n:6, array: [1, 7, 15, 25, 55, 80] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 6, 6)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=6, n=6)' },
{ action: 'setRange', i:6, n:6 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 6 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 3'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 6, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=6, n=3)' },
{ action: 'setRange', i:6, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 6, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=6, n=1)' },
{ action: 'setRange', i:6, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:6, n:1, array: [23] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 7, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=7, n=2)' },
{ action: 'setRange', i:7, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 7, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=7, n=1)' },
{ action: 'setRange', i:7, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:7, n:1, array: [72] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 8, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=8, n=1)' },
{ action: 'setRange', i:8, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:8, n:1, array: [9] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=7, middle=8, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:7, n:2, array: [9, 72] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=6, middle=7, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:6, n:3, array: [9, 23, 72] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 9, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=9, n=3)' },
{ action: 'setRange', i:9, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 9, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=9, n=1)' },
{ action: 'setRange', i:9, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:9, n:1, array: [98] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 10, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=10, n=2)' },
{ action: 'setRange', i:10, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 10, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=10, n=1)' },
{ action: 'setRange', i:10, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:10, n:1, array: [47] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 11, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=11, n=1)' },
{ action: 'setRange', i:11, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:11, n:1, array: [70] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=10, middle=11, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:10, n:2, array: [47, 70] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=9, middle=10, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:9, n:3, array: [47, 70, 98] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=6, middle=9, len=6)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:6, n:6, array: [9, 23, 47, 70, 72, 98] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=0, middle=6, len=12)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:0, n:12, array: [1, 7, 9, 15, 23, 25, 47, 55, 70, 72, 80, 98] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 12, 13)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=12, n=13)' },
{ action: 'setRange', i:12, n:13 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 13 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 6'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 12, 6)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=12, n=6)' },
{ action: 'setRange', i:12, n:6 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 6 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 3'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 12, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=12, n=3)' },
{ action: 'setRange', i:12, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 12, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=12, n=1)' },
{ action: 'setRange', i:12, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:12, n:1, array: [12] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 13, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=13, n=2)' },
{ action: 'setRange', i:13, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 13, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=13, n=1)' },
{ action: 'setRange', i:13, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:13, n:1, array: [100] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 14, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=14, n=1)' },
{ action: 'setRange', i:14, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:14, n:1, array: [91] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=13, middle=14, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:13, n:2, array: [91, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=12, middle=13, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:12, n:3, array: [12, 91, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 15, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=15, n=3)' },
{ action: 'setRange', i:15, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 15, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=15, n=1)' },
{ action: 'setRange', i:15, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:15, n:1, array: [72] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 16, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=16, n=2)' },
{ action: 'setRange', i:16, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 16, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=16, n=1)' },
{ action: 'setRange', i:16, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:16, n:1, array: [96] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 17, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=17, n=1)' },
{ action: 'setRange', i:17, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:17, n:1, array: [45] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=16, middle=17, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:16, n:2, array: [45, 96] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=15, middle=16, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:15, n:3, array: [45, 72, 96] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=12, middle=15, len=6)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:12, n:6, array: [12, 45, 72, 91, 96, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 18, 7)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=18, n=7)' },
{ action: 'setRange', i:18, n:7 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 7 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 3'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 18, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=18, n=3)' },
{ action: 'setRange', i:18, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 18, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=18, n=1)' },
{ action: 'setRange', i:18, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:18, n:1, array: [20] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 19, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=19, n=2)' },
{ action: 'setRange', i:19, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 19, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=19, n=1)' },
{ action: 'setRange', i:19, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:19, n:1, array: [36] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 20, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=20, n=1)' },
{ action: 'setRange', i:20, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:20, n:1, array: [70] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=19, middle=20, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:19, n:2, array: [36, 70] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=18, middle=19, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:18, n:3, array: [20, 36, 70] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 21, 4)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=21, n=4)' },
{ action: 'setRange', i:21, n:4 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 4 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 2'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 21, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=21, n=2)' },
{ action: 'setRange', i:21, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 21, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=21, n=1)' },
{ action: 'setRange', i:21, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:21, n:1, array: [94] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 22, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=22, n=1)' },
{ action: 'setRange', i:22, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:22, n:1, array: [37] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=21, middle=22, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:21, n:2, array: [37, 94] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 23, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=23, n=2)' },
{ action: 'setRange', i:23, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 23, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=23, n=1)' },
{ action: 'setRange', i:23, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:23, n:1, array: [25] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 24, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=24, n=1)' },
{ action: 'setRange', i:24, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:24, n:1, array: [53] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=23, middle=24, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:23, n:2, array: [25, 53] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=21, middle=23, len=4)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:21, n:4, array: [25, 37, 53, 94] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=18, middle=21, len=7)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:18, n:7, array: [20, 25, 36, 37, 53, 70, 94] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=12, middle=18, len=13)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:12, n:13, array: [12, 20, 25, 36, 37, 45, 53, 70, 72, 91, 94, 96, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=0, middle=12, len=25)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:0, n:25, array: [1, 7, 9, 12, 15, 20, 23, 25, 25, 36, 37, 45, 47, 53, 55, 70, 70, 72, 72, 80, 91, 94, 96, 98, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' }
];

MergeSort[R50].steps = [
{ action: 'curline', line: 0, text:'mergesort(lst, i=0, n=50)' },
{ action: 'setRange', i:0, n:50 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 50 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 25'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 0, 25)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=0, n=25)' },
{ action: 'setRange', i:0, n:25 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 25 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 12'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 0, 12)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=0, n=12)' },
{ action: 'setRange', i:0, n:12 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 12 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 6'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 0, 6)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=0, n=6)' },
{ action: 'setRange', i:0, n:6 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 6 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 3'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 0, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=0, n=3)' },
{ action: 'setRange', i:0, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 0, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=0, n=1)' },
{ action: 'setRange', i:0, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:0, n:1, array: [51] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 1, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=1, n=2)' },
{ action: 'setRange', i:1, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 1, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=1, n=1)' },
{ action: 'setRange', i:1, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:1, n:1, array: [66] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 2, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=2, n=1)' },
{ action: 'setRange', i:2, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:2, n:1, array: [69] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=1, middle=2, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:1, n:2, array: [66, 69] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=0, middle=1, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:0, n:3, array: [51, 66, 69] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 3, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=3, n=3)' },
{ action: 'setRange', i:3, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 3, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=3, n=1)' },
{ action: 'setRange', i:3, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:3, n:1, array: [33] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 4, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=4, n=2)' },
{ action: 'setRange', i:4, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 4, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=4, n=1)' },
{ action: 'setRange', i:4, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:4, n:1, array: [8] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 5, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=5, n=1)' },
{ action: 'setRange', i:5, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:5, n:1, array: [95] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=4, middle=5, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:4, n:2, array: [8, 95] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=3, middle=4, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:3, n:3, array: [8, 33, 95] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=0, middle=3, len=6)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:0, n:6, array: [8, 33, 51, 66, 69, 95] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 6, 6)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=6, n=6)' },
{ action: 'setRange', i:6, n:6 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 6 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 3'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 6, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=6, n=3)' },
{ action: 'setRange', i:6, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 6, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=6, n=1)' },
{ action: 'setRange', i:6, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:6, n:1, array: [1] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 7, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=7, n=2)' },
{ action: 'setRange', i:7, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 7, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=7, n=1)' },
{ action: 'setRange', i:7, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:7, n:1, array: [96] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 8, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=8, n=1)' },
{ action: 'setRange', i:8, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:8, n:1, array: [100] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=7, middle=8, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:7, n:2, array: [96, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=6, middle=7, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:6, n:3, array: [1, 96, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 9, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=9, n=3)' },
{ action: 'setRange', i:9, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 9, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=9, n=1)' },
{ action: 'setRange', i:9, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:9, n:1, array: [22] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 10, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=10, n=2)' },
{ action: 'setRange', i:10, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 10, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=10, n=1)' },
{ action: 'setRange', i:10, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:10, n:1, array: [29] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 11, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=11, n=1)' },
{ action: 'setRange', i:11, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:11, n:1, array: [4] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=10, middle=11, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:10, n:2, array: [4, 29] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=9, middle=10, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:9, n:3, array: [4, 22, 29] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=6, middle=9, len=6)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:6, n:6, array: [1, 4, 22, 29, 96, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=0, middle=6, len=12)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:0, n:12, array: [1, 4, 8, 22, 29, 33, 51, 66, 69, 95, 96, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 12, 13)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=12, n=13)' },
{ action: 'setRange', i:12, n:13 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 13 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 6'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 12, 6)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=12, n=6)' },
{ action: 'setRange', i:12, n:6 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 6 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 3'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 12, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=12, n=3)' },
{ action: 'setRange', i:12, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 12, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=12, n=1)' },
{ action: 'setRange', i:12, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:12, n:1, array: [72] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 13, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=13, n=2)' },
{ action: 'setRange', i:13, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 13, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=13, n=1)' },
{ action: 'setRange', i:13, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:13, n:1, array: [21] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 14, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=14, n=1)' },
{ action: 'setRange', i:14, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:14, n:1, array: [100] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=13, middle=14, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:13, n:2, array: [21, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=12, middle=13, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:12, n:3, array: [21, 72, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 15, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=15, n=3)' },
{ action: 'setRange', i:15, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 15, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=15, n=1)' },
{ action: 'setRange', i:15, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:15, n:1, array: [71] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 16, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=16, n=2)' },
{ action: 'setRange', i:16, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 16, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=16, n=1)' },
{ action: 'setRange', i:16, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:16, n:1, array: [19] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 17, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=17, n=1)' },
{ action: 'setRange', i:17, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:17, n:1, array: [55] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=16, middle=17, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:16, n:2, array: [19, 55] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=15, middle=16, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:15, n:3, array: [19, 55, 71] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=12, middle=15, len=6)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:12, n:6, array: [19, 21, 55, 71, 72, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 18, 7)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=18, n=7)' },
{ action: 'setRange', i:18, n:7 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 7 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 3'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 18, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=18, n=3)' },
{ action: 'setRange', i:18, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 18, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=18, n=1)' },
{ action: 'setRange', i:18, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:18, n:1, array: [70] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 19, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=19, n=2)' },
{ action: 'setRange', i:19, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 19, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=19, n=1)' },
{ action: 'setRange', i:19, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:19, n:1, array: [86] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 20, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=20, n=1)' },
{ action: 'setRange', i:20, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:20, n:1, array: [10] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=19, middle=20, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:19, n:2, array: [10, 86] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=18, middle=19, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:18, n:3, array: [10, 70, 86] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 21, 4)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=21, n=4)' },
{ action: 'setRange', i:21, n:4 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 4 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 2'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 21, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=21, n=2)' },
{ action: 'setRange', i:21, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 21, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=21, n=1)' },
{ action: 'setRange', i:21, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:21, n:1, array: [91] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 22, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=22, n=1)' },
{ action: 'setRange', i:22, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:22, n:1, array: [74] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=21, middle=22, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:21, n:2, array: [74, 91] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 23, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=23, n=2)' },
{ action: 'setRange', i:23, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 23, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=23, n=1)' },
{ action: 'setRange', i:23, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:23, n:1, array: [28] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 24, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=24, n=1)' },
{ action: 'setRange', i:24, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:24, n:1, array: [12] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=23, middle=24, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:23, n:2, array: [12, 28] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=21, middle=23, len=4)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:21, n:4, array: [12, 28, 74, 91] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=18, middle=21, len=7)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:18, n:7, array: [10, 12, 28, 70, 74, 86, 91] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=12, middle=18, len=13)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:12, n:13, array: [10, 12, 19, 21, 28, 55, 70, 71, 72, 74, 86, 91, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=0, middle=12, len=25)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:0, n:25, array: [1, 4, 8, 10, 12, 19, 21, 22, 28, 29, 33, 51, 55, 66, 69, 70, 71, 72, 74, 86, 91, 95, 96, 100, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 25, 25)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=25, n=25)' },
{ action: 'setRange', i:25, n:25 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 25 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 12'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 25, 12)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=25, n=12)' },
{ action: 'setRange', i:25, n:12 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 12 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 6'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 25, 6)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=25, n=6)' },
{ action: 'setRange', i:25, n:6 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 6 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 3'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 25, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=25, n=3)' },
{ action: 'setRange', i:25, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 25, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=25, n=1)' },
{ action: 'setRange', i:25, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:25, n:1, array: [57] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 26, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=26, n=2)' },
{ action: 'setRange', i:26, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 26, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=26, n=1)' },
{ action: 'setRange', i:26, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:26, n:1, array: [36] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 27, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=27, n=1)' },
{ action: 'setRange', i:27, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:27, n:1, array: [95] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=26, middle=27, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:26, n:2, array: [36, 95] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=25, middle=26, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:25, n:3, array: [36, 57, 95] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 28, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=28, n=3)' },
{ action: 'setRange', i:28, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 28, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=28, n=1)' },
{ action: 'setRange', i:28, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:28, n:1, array: [48] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 29, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=29, n=2)' },
{ action: 'setRange', i:29, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 29, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=29, n=1)' },
{ action: 'setRange', i:29, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:29, n:1, array: [63] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 30, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=30, n=1)' },
{ action: 'setRange', i:30, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:30, n:1, array: [23] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=29, middle=30, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:29, n:2, array: [23, 63] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=28, middle=29, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:28, n:3, array: [23, 48, 63] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=25, middle=28, len=6)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:25, n:6, array: [23, 36, 48, 57, 63, 95] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 31, 6)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=31, n=6)' },
{ action: 'setRange', i:31, n:6 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 6 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 3'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 31, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=31, n=3)' },
{ action: 'setRange', i:31, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 31, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=31, n=1)' },
{ action: 'setRange', i:31, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:31, n:1, array: [53] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 32, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=32, n=2)' },
{ action: 'setRange', i:32, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 32, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=32, n=1)' },
{ action: 'setRange', i:32, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:32, n:1, array: [78] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 33, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=33, n=1)' },
{ action: 'setRange', i:33, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:33, n:1, array: [94] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=32, middle=33, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:32, n:2, array: [78, 94] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=31, middle=32, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:31, n:3, array: [53, 78, 94] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 34, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=34, n=3)' },
{ action: 'setRange', i:34, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 34, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=34, n=1)' },
{ action: 'setRange', i:34, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:34, n:1, array: [100] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 35, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=35, n=2)' },
{ action: 'setRange', i:35, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 35, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=35, n=1)' },
{ action: 'setRange', i:35, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:35, n:1, array: [52] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 36, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=36, n=1)' },
{ action: 'setRange', i:36, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:36, n:1, array: [41] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=35, middle=36, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:35, n:2, array: [41, 52] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=34, middle=35, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:34, n:3, array: [41, 52, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=31, middle=34, len=6)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:31, n:6, array: [41, 52, 53, 78, 94, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=25, middle=31, len=12)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:25, n:12, array: [23, 36, 41, 48, 52, 53, 57, 63, 78, 94, 95, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 37, 13)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=37, n=13)' },
{ action: 'setRange', i:37, n:13 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 13 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 6'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 37, 6)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=37, n=6)' },
{ action: 'setRange', i:37, n:6 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 6 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 3'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 37, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=37, n=3)' },
{ action: 'setRange', i:37, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 37, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=37, n=1)' },
{ action: 'setRange', i:37, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:37, n:1, array: [92] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 38, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=38, n=2)' },
{ action: 'setRange', i:38, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 38, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=38, n=1)' },
{ action: 'setRange', i:38, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:38, n:1, array: [86] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 39, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=39, n=1)' },
{ action: 'setRange', i:39, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:39, n:1, array: [64] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=38, middle=39, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:38, n:2, array: [64, 86] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=37, middle=38, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:37, n:3, array: [64, 86, 92] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 40, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=40, n=3)' },
{ action: 'setRange', i:40, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 40, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=40, n=1)' },
{ action: 'setRange', i:40, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:40, n:1, array: [91] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 41, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=41, n=2)' },
{ action: 'setRange', i:41, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 41, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=41, n=1)' },
{ action: 'setRange', i:41, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:41, n:1, array: [90] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 42, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=42, n=1)' },
{ action: 'setRange', i:42, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:42, n:1, array: [16] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=41, middle=42, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:41, n:2, array: [16, 90] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=40, middle=41, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:40, n:3, array: [16, 90, 91] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=37, middle=40, len=6)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:37, n:6, array: [16, 64, 86, 90, 91, 92] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 43, 7)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=43, n=7)' },
{ action: 'setRange', i:43, n:7 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 7 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 3'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 43, 3)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=43, n=3)' },
{ action: 'setRange', i:43, n:3 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 3 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 43, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=43, n=1)' },
{ action: 'setRange', i:43, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:43, n:1, array: [85] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 44, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=44, n=2)' },
{ action: 'setRange', i:44, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 44, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=44, n=1)' },
{ action: 'setRange', i:44, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:44, n:1, array: [6] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 45, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=45, n=1)' },
{ action: 'setRange', i:45, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:45, n:1, array: [70] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=44, middle=45, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:44, n:2, array: [6, 70] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=43, middle=44, len=3)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:43, n:3, array: [6, 70, 85] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 46, 4)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=46, n=4)' },
{ action: 'setRange', i:46, n:4 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 4 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 2'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 46, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=46, n=2)' },
{ action: 'setRange', i:46, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 46, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=46, n=1)' },
{ action: 'setRange', i:46, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:46, n:1, array: [38] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 47, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=47, n=1)' },
{ action: 'setRange', i:47, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:47, n:1, array: [72] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=46, middle=47, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:46, n:2, array: [38, 72] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 48, 2)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=48, n=2)' },
{ action: 'setRange', i:48, n:2 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 2 <= 1'},
{ action: 'step' },
{ action: 'curline', line:3, text: '   halflen = 1'},
{ action: 'step' },
{ action: 'curline', line: 4, text:'   mergesort(lst, 48, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=48, n=1)' },
{ action: 'setRange', i:48, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:48, n:1, array: [78] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 5, text:'   mergesort(lst, 49, 1)' },
{ action: 'step' },
{ action: 'push', line: 0, text:'mergesort(lst, i=49, n=1)' },
{ action: 'setRange', i:49, n:1 },
{ action: 'step' },
{ action: 'curline', line: 1, text:'   if 1 <= 1'},
{ action: 'step' },
{ action: 'curline', line: 2, text: '      return'},
{ action: 'step' },
{ action: 'setSortedSlice',  i:49, n:1, array: [75] },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=48, middle=49, len=2)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:48, n:2, array: [75, 78] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=46, middle=48, len=4)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:46, n:4, array: [38, 72, 75, 78] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=43, middle=46, len=7)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:43, n:7, array: [6, 38, 70, 72, 75, 78, 85] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=37, middle=43, len=13)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:37, n:13, array: [6, 16, 38, 64, 70, 72, 75, 78, 85, 86, 90, 91, 92] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=25, middle=37, len=25)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:25, n:25, array: [6, 16, 23, 36, 38, 41, 48, 52, 53, 57, 63, 64, 70, 72, 75, 78, 78, 85, 86, 90, 91, 92, 94, 95, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' },
{ action: 'step' },
{ action: 'curline', line: 6, text :'   merge(lst, left=0, middle=25, len=50)' },
{ action: 'step' },
{ action: 'setSortedSlice',  i:0, n:50, array: [1, 4, 6, 8, 10, 12, 16, 19, 21, 22, 23, 28, 29, 33, 36, 38, 41, 48, 51, 52, 53, 55, 57, 63, 64, 66, 69, 70, 70, 71, 72, 72, 74, 75, 78, 78, 85, 86, 86, 90, 91, 91, 92, 94, 95, 95, 96, 100, 100, 100] },
{ action: 'step' },
{ action: 'curline',  line: 7, text : '   return'},
{ action: 'step' },
{ action: 'pop' }
];
